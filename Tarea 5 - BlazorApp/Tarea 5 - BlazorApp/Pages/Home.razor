@page "/"
@using Tarea_5___BlazorApp.Shared

<PageTitle>Home</PageTitle>

<div class="max-w-2xl mx-auto p-6">
    <h4 class="font-semibold text-gray-700 mb-3">
        @(tareaEnEdicion == null ? "Añadir nueva tarea" : $"Editando: {tareaEnEdicion.Nombre}")
    </h4>

    <form @onsubmit="GuardarTarea" id="add-event-form" class="flex flex-col sm:flex-row gap-3">
        <input @bind="nuevaTareaNombre" type="text" placeholder="Título de la tarea" class="flex-grow p-2 border rounded-md" required>
        <input @bind="nuevaTareaDate" type="date" class="p-2 border rounded-md" required>
        <input @bind="nuevaTareaHora" type="time" class="p-2 border rounded-md" required>

        <button type="submit" class="bg-indigo-600 text-white font-semibold px-4 py-2 rounded-md hover:bg-indigo-700 shadow-sm">
            @(tareaEnEdicion == null ? "Añadir" : "Guardar")
        </button>

        @if (tareaEnEdicion != null)
        {
            <button type="button" @onclick="CancelarEdicion" class="bg-gray-500 text-white font-semibold px-4 py-2 rounded-md hover:bg-gray-600 shadow-sm">
                Cancelar
            </button>
        }
    </form>
</div>

<h3 class="mt-4">Tareas Pendientes</h3>

@if (Tareas.Any())
{
    <ul class="list-group">
        @foreach (var tarea in Tareas.OrderBy(t => t.FechaHora))
        {
            <Tarea Tarea="tarea" OnEliminar="EliminarTarea" OnEditar="IniciarEdicion" />
        }
    </ul>
}

@code {
    private List<TareaModel> Tareas = new();
    private string nuevaTareaNombre = "";
    private DateTime nuevaTareaDate = DateTime.Today;
    private DateTime nuevaTareaHora = DateTime.Now;

    private TareaModel? tareaEnEdicion = null;

    protected override void OnInitialized()
    {
        Tareas = new List<TareaModel>
        {
            new TareaModel { Id = 1, Nombre = "Aprender componentes Blazor", Completada = true, FechaHora = new DateTime(2025, 10, 20, 9, 30, 0) },
            new TareaModel { Id = 2, Nombre = "Crear un modelo de datos", FechaHora = new DateTime(2025, 10, 21, 11, 0, 0) },
            new TareaModel { Id = 3, Nombre = "Integrar el componente en la página Home", FechaHora = new DateTime(2025, 10, 22, 15, 45, 0) }
        };
    }

    private void IniciarEdicion(TareaModel tareaParaEditar)
    {
        tareaEnEdicion = tareaParaEditar;
        nuevaTareaNombre = tareaEnEdicion.Nombre;
        if (tareaEnEdicion.FechaHora.HasValue)
        {
            nuevaTareaDate = tareaEnEdicion.FechaHora.Value.Date;
            nuevaTareaHora = tareaEnEdicion.FechaHora.Value;
        }
    }

    private void GuardarTarea()
    {
        if (!string.IsNullOrWhiteSpace(nuevaTareaNombre))
        {
            DateTime fechaHoraCompleta = nuevaTareaDate.Date + nuevaTareaHora.TimeOfDay;

            if (tareaEnEdicion == null)
            {
                int nuevoId = Tareas.Any() ? Tareas.Max(t => t.Id) + 1 : 1;
                Tareas.Add(new TareaModel { Id = nuevoId, Nombre = nuevaTareaNombre, FechaHora = fechaHoraCompleta });
            }
            else
            {
                tareaEnEdicion.Nombre = nuevaTareaNombre;
                tareaEnEdicion.FechaHora = fechaHoraCompleta;
                tareaEnEdicion = null;
            }
            LimpiarFormulario();
        }
    }

    private void CancelarEdicion()
    {
        tareaEnEdicion = null;
        LimpiarFormulario();
    }

    private void LimpiarFormulario()
    {
        nuevaTareaNombre = "";
        nuevaTareaDate = DateTime.Today;
        nuevaTareaHora = DateTime.Now;
    }

    private void EliminarTarea(TareaModel tareaParaEliminar)
    {
        Tareas.Remove(tareaParaEliminar);
    }
}